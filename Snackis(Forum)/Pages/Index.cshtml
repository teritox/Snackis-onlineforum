@page
@model IndexModel
@using Microsoft.AspNetCore.Identity
@using Snackis_Forum_.Areas.Identity.Data

@inject SignInManager<ForumUser> SignInManager
@inject UserManager<ForumUser> UserManager
@inject Snackis_Forum_.Services.IForumDataService _ds
@{
    ViewData["Title"] = "Hem";
}

<div>
    <div>
        @if (Model.SiteTitle != null)
        {
            <div class="text-center mb-5">
                <h1 class="display-1" style="margin-top:50px; margin-bottom:50px; font-family:fantasy;">Snackis</h1>
                <p>
                    Välkommen till vårt forum <br />
                    Hoppa rakt in i en diskussion som gäst eller skapa ett konto så att våra användare känner igen dig
                </p>
            </div>

            <table class="table table-primary m-0 ml-auto mr-auto borderless text-dark" style="width:80%;">
                <thead>
                    <tr>
                        <th>
                            @Model.SiteTitle.MainTitle
                        </th>
                    </tr>
                </thead>
            </table>
        }

        @if (Model.SubjectList != null)
        {
            <table class="table table-bordered ml-auto mr-auto shadow p-3 rounded" style="width:80%;">
                <thead>
                    <tr>
                        <th class="font-weight-bold">
                            Rubrik
                        </th>
                        <th class="font-weight-bold">
                            Diskussioner
                        </th>
                        <th class="font-weight-bold">
                            Inlägg
                        </th>
                        <th class="font-weight-bold">
                            Senaste tråd
                        </th>
                    </tr>
                </thead>
                @*@foreach (var thread in Model.ThreadList.Where(s => s.SubjectId == subject.Id).OrderByDescending(s => s.CreationDate).Take(5))*@
                <tbody>
                    @foreach (var subject in Model.SubjectList)
                    {
                        <tr>
                            <td>
                                <a class="text-primary" asp-page="/ThreadIndex" asp-route-SubjectId="@subject.Id">
                                    @subject.Name
                                </a>
                            </td>
                            <td>
                                @Model.ThreadList.Where(t => t.SubjectId == subject.Id).Count()
                            </td>
                            <td>
                                @await _ds.GetPostsCountInSubject(subject.Id)
                            </td>
                            <td>
                                @if (_ds.GetLastestThreadInSubject(subject.Id).Result == null)
                                {

                                }
                                else
                                {
                                <a class="text-primary" asp-page="/Posts" asp-route-ThreadId="@_ds.GetLastestThreadInSubject(subject.Id).Result.Id">
                                "@_ds.GetLastestThreadInSubject(subject.Id).Result.TreadTitle"
                                </a>
                                    <span>av </span>
                                    if (_ds.GetLastestThreadInSubject(subject.Id).Result.AuthorId == "")
                                    {
                                        <span>Gäst</span>
                                    }
                                    else if ((UserManager.FindByIdAsync(_ds.GetLastestThreadInSubject(subject.Id).Result.AuthorId).Result) == null)
                                    {
                                        <span>Borttagen</span>
                                    }
                                    else
                                    {
                                        @UserManager.FindByIdAsync(_ds.GetLastestThreadInSubject(subject.Id).Result.AuthorId).Result.NickName
                                    }
                                    <br />
                                    <span>
                                        @_ds.GetLastestThreadInSubject(subject.Id).Result.CreationDate.ToShortDateString()
                                         @_ds.GetLastestThreadInSubject(subject.Id).Result.CreationDate.ToShortTimeString()
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            <br />

        }
    </div>
</div>